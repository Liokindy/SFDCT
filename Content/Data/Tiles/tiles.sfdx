defaultTile(d_t)
{
	colorPalette = palNone;
	material = default;
	kickable = true;
}

Tile(error)
{
	drawCategory = INV;
	mainLayer = 1;
	type = Static;
	editorEnabled = false;
	tileTexture = none;
	material.blockExplosions = false;
	doTakeDamage.Fire = false;
}

defaultTile(DefaultTile)
{
	kickable = true;
	uniqueId = 0;
	material = default;
	projectileHit = true;
	absorbProjectile = true;
	objectStrength = 0.0;
	isCloud = false;
	life = 0.0;
	drawCategory = SLD;
	mainLayer = 1;
	type = Static;
	editorEnabled = true;
	fixture()
	{
		collisionGroup = static_ground;
		collisionPoints = null;
		blockFire = true;
	}
	colorPalette = Solid;
	freeRotation = true;
	kickable = true;
	punchable = true;
	material.flammable = false;
	doTakeDamage.Fire = false;
}

Tile(Transparent_Water00A)
{
	isCloud = true;
	cloudRotation = 0;
	drawCategory = FG;
	material = water;
	sizeable = H;
	projectileHit = false;
	fixture()
	{
		collisionGroup = none;
		blockFire = false;
	}
	animation(Transparent_Water00A)
	{
		frameTimes = 100;
		width = 16;
		isSynced = true;
	}
}
Tile(Transparent_Water00B)
{
	drawCategory = FG;
	material = water;
	sizeable = D;
	projectileHit = false;
	fixture()
	{
		collisionGroup = none;
		blockFire = false;
	}
	animation(Transparent_Water00B)
	{
		frameTimes = 100;
		width = 16;
		isSynced = true;
	}
}
Tile(WallDarkPixel00A)
{
	colorPalette = BG;
	sizeable = D;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-4, -4), (4, -4), (-4, 4);
	}
}
Tile(WallDarkShade00A)
{
	colorPalette = BG;
	sizeable = D;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
	}
}
Tile(WallDarkShade00B)
{
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-4, -4), (4, -4), (-4, 4);
	}
}
Tile(WallDarkShade00C)
{
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-8, -4), (8, -4), (-8, 4);
	}
}
Tile(WallDarkShade00E)
{
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-16, -4), (16, -4), (-16, 4);
	}
}
Tile(WallDarkShade00F)
{
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-4, -2), (4, 4), (-2, 4);
	}
}
Tile(WallDarkShade00G)
{
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-8, -4), (4, 8), (-8, 8);
	}
}
Tile(WallDarkShade00I)
{
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-8, -4), (8, -4), (-8, 4);
	}
}
Tile(WallDarkShadeOutline00A)
{
	isCloud = true;
	cloudRotation = 0.0;
	absorbProjectile = false;
	kickable = false;
	material.blockExplosions = false;
	colorPalette = BG;
    sizeable = H;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		collisionPoints = (-4, 0), (4, 0), (4, 4), (-4, 4);
	}
}
Tile(WallDarkShadeOutline00B)
{
	isCloud = true;
	cloudRotation = 0.0;
	absorbProjectile = false;
	kickable = false;
	material.blockExplosions = false;
	colorPalette = BG;
    sizeable = H;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		collisionPoints = (-8, -4), (-4, -12), (-4, -4), (-8, 4);
	}
}
Tile(WallDarkShadeOutline00C)
{
	isCloud = true;
	cloudRotation = 0.0;
	absorbProjectile = false;
	kickable = false;
	material.blockExplosions = false;
	colorPalette = BG;
    sizeable = H;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		collisionPoints = (-8, -4), (0, -12), (0, -4), (-8, 4);
	}
}
Tile(WallDarkShadeOutline00E)
{
	isCloud = true;
	cloudRotation = 0.0;
	absorbProjectile = false;
	kickable = false;
	material.blockExplosions = false;
	colorPalette = BG;
    sizeable = H;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		collisionPoints = (-16,-4), (16,-12), (16,-4), (-16,4);
	}
}
Tile(WallDarkShadeOutline00F)
{
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-4, -2), (4, 4), (-2, 4);
	}
}
Tile(WallDarkShadeOutline00G)
{
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-8, -4), (4, 8), (-8, 8);
	}
}
Tile(WallMidPixel00A)
{
	colorPalette = BG;
	sizeable = D;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-4, -4), (4, -4), (-4, 4);
	}
}
Tile(WallMidShade00A)
{
	colorPalette = BG;
	sizeable = D;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
	}
}
Tile(WallMidShade00B)
{
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-4, -4), (4, -4), (-4, 4);
	}
}
Tile(WallMidShade00C)
{
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-8, -4), (8, -4), (-8, 4);
	}
}
Tile(WallMidShade00E)
{
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-16, -4), (16, -4), (-16, 4);
	}
}
Tile(WallMidShade00F)
{
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-4, -2), (4, 4), (-2, 4);
	}
}
Tile(WallMidShade00G)
{
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-8, -4), (4, 8), (-8, 8);
	}
}
Tile(WallMidShade00I)
{
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-8, -4), (8, -4), (-8, 4);
	}
}
Tile(WallMidShadeOutline00A)
{
	isCloud = true;
	cloudRotation = 0.0;
	absorbProjectile = false;
	kickable = false;
	material.blockExplosions = false;
	colorPalette = BG;
    sizeable = H;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		collisionPoints = (-4, 0), (4, 0), (4, 4), (-4, 4);
	}
}
Tile(WallMidShadeOutline00B)
{
	isCloud = true;
	cloudRotation = 0.0;
	absorbProjectile = false;
	kickable = false;
	material.blockExplosions = false;
	colorPalette = BG;
    sizeable = H;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		collisionPoints = (-8, -4), (-4, -12), (-4, -4), (-8, 4);
	}
}
Tile(WallMidShadeOutline00C)
{
	colorPalette = BG;
	isCloud = true;
	cloudRotation = 0.0;
	absorbProjectile = false;
	kickable = false;
	material.blockExplosions = false;
	colorPalette = BG;
    sizeable = H;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		collisionPoints = (-8, -4), (0, -12), (0, -4), (-8, 4);
	}
}
Tile(WallMidShadeOutline00E)
{
	isCloud = true;
	cloudRotation = 0.0;
	absorbProjectile = false;
	kickable = false;
	material.blockExplosions = false;
	colorPalette = BG;
    sizeable = H;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		collisionPoints = (-16,-4), (16,-12), (16,-4), (-16,4);
	}
}
Tile(WallMidShadeOutline00F)
{
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-4, -2), (4, 4), (-2, 4);
	}
}
Tile(WallMidShadeOutline00G)
{
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-8, -4), (4, 8), (-8, 8);
	}
}
Tile(WallLightPixel00A)
{
	colorPalette = BG;
	sizeable = D;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-0.5, -0.5), (0.5, -0.5), (0.5, 0.5), (-0.5, 0.5);
	}
}
Tile(WallLightShade00A)
{
	colorPalette = BG;
	sizeable = D;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
	}
}
Tile(WallLightShade00B)
{
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-4, -4), (4, -4), (-4, 4);
	}
}
Tile(WallLightShade00C)
{
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-8, -4), (8, -4), (-8, 4);
	}
}
Tile(WallLightShade00E)
{
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-16, -4), (16, -4), (-16, 4);
	}
}
Tile(WallLightShade00F)
{
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-4, -2), (4, 4), (-2, 4);
	}
}
Tile(WallLightShade00G)
{
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-8, -4), (4, 8), (-8, 8);
	}
}
Tile(WallLightShade00I)
{
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-8, -4), (8, -4), (-8, 4);
	}
}
Tile(WallLightShadeOutline00A)
{
	isCloud = true;
	cloudRotation = 0.0;
	absorbProjectile = false;
	kickable = false;
	material.blockExplosions = false;
	colorPalette = BG;
    sizeable = H;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		collisionPoints = (-4, 0), (4, 0), (4, 4), (-4, 4);
	}
}
Tile(WallLightShadeOutline00B)
{
	isCloud = true;
	cloudRotation = 0.0;
	absorbProjectile = false;
	kickable = false;
	material.blockExplosions = false;
	colorPalette = BG;
    sizeable = H;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		collisionPoints = (-8, -4), (-4, -12), (-4, -4), (-8, 4);
	}
}
Tile(WallLightShadeOutline00C)
{
	isCloud = true;
	cloudRotation = 0.0;
	absorbProjectile = false;
	kickable = false;
	material.blockExplosions = false;
	colorPalette = BG;
    sizeable = H;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		collisionPoints = (-8, -4), (0, -12), (0, -4), (-8, 4);
	}
}
Tile(WallLightShadeOutline00E)
{
	isCloud = true;
	cloudRotation = 0.0;
	absorbProjectile = false;
	kickable = false;
	material.blockExplosions = false;
	colorPalette = BG;
    sizeable = H;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		collisionPoints = (-16,-4), (16,-12), (16,-4), (-16,4);
	}
}
Tile(WallLightShadeOutline00F)
{
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-4, -2), (4, 4), (-2, 4);
	}
}
Tile(WallLightShadeOutline00G)
{
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-8, -4), (4, 8), (-8, 8);
	}
}
Tile(WeakWallDarkPixel00A)
{
	life = 50;
	colorPalette = BG;
	sizeable = D;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-4, -4), (4, -4), (-4, 4);
	}
}
Tile(WeakWallDarkShade00A)
{
	life = 50;
	colorPalette = BG;
	sizeable = D;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
	}
}
Tile(WeakWallDarkShade00B)
{
	life = 50;
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-4, -4), (4, -4), (-4, 4);
	}
}
Tile(WeakWallDarkShade00C)
{
	life = 50;
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-8, -4), (8, -4), (-8, 4);
	}
}
Tile(WeakWallDarkShade00E)
{
	life = 50;
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-16, -4), (16, -4), (-16, 4);
	}
}
Tile(WeakWallDarkShade00F)
{
	life = 50;
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-4, -2), (4, 4), (-2, 4);
	}
}
Tile(WeakWallDarkShade00G)
{
	life = 50;
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-8, -4), (4, 8), (-8, 8);
	}
}
Tile(WeakWallDarkShade00I)
{
	life = 50;
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-8, -4), (8, -4), (-8, 4);
	}
}
Tile(WeakWallDarkShadeOutline00A)
{
	isCloud = true;
	cloudRotation = 0.0;
	absorbProjectile = false;
	kickable = false;
	material.blockExplosions = false;
	life = 50;
	colorPalette = BG;
    sizeable = H;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		collisionPoints = (-4, 0), (4, 0), (4, 4), (-4, 4);
	}
}
Tile(WeakWallDarkShadeOutline00B)
{
	isCloud = true;
	cloudRotation = 0.0;
	absorbProjectile = false;
	kickable = false;
	material.blockExplosions = false;
	life = 50;
	colorPalette = BG;
    sizeable = H;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		collisionPoints = (-8, -4), (-4, -12), (-4, -4), (-8, 4);
	}
}
Tile(WeakWallDarkShadeOutline00C)
{
	isCloud = true;
	cloudRotation = 0.0;
	absorbProjectile = false;
	kickable = false;
	material.blockExplosions = false;
	life = 50;
	colorPalette = BG;
    sizeable = H;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		collisionPoints = (-8, -4), (0, -12), (0, -4), (-8, 4);
	}
}
Tile(WeakWallDarkShadeOutline00E)
{
	isCloud = true;
	cloudRotation = 0.0;
	absorbProjectile = false;
	kickable = false;
	material.blockExplosions = false;
	life = 50;
	colorPalette = BG;
    sizeable = H;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		collisionPoints = (-16,-4), (16,-12), (16,-4), (-16,4);
	}
}
Tile(WeakWallDarkShadeOutline00F)
{
	life = 50;
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-4, -2), (4, 4), (-2, 4);
	}
}
Tile(WeakWallDarkShadeOutline00G)
{
	life = 50;
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-8, -4), (4, 8), (-8, 8);
	}
}
Tile(WeakWallMidPixel00A)
{
	life = 50;
	colorPalette = BG;
	sizeable = D;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-4, -4), (4, -4), (-4, 4);
	}
}
Tile(WeakWallMidShade00A)
{
	life = 50;
	colorPalette = BG;
	sizeable = D;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
	}
}
Tile(WeakWallMidShade00B)
{
	life = 50;
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-4, -4), (4, -4), (-4, 4);
	}
}
Tile(WeakWallMidShade00C)
{
	life = 50;
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-8, -4), (8, -4), (-8, 4);
	}
}
Tile(WeakWallMidShade00E)
{
	life = 50;
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-16, -4), (16, -4), (-16, 4);
	}
}
Tile(WeakWallMidShade00F)
{
	life = 50;
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-4, -2), (4, 4), (-2, 4);
	}
}
Tile(WeakWallMidShade00G)
{
	life = 50;
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-8, -4), (4, 8), (-8, 8);
	}
}
Tile(WeakWallMidShade00I)
{
	life = 50;
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-8, -4), (8, -4), (-8, 4);
	}
}
Tile(WeakWallMidShadeOutline00A)
{
	isCloud = true;
	cloudRotation = 0.0;
	absorbProjectile = false;
	kickable = false;
	material.blockExplosions = false;
	life = 50;
	colorPalette = BG;
    sizeable = H;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		collisionPoints = (-4, 0), (4, 0), (4, 4), (-4, 4);
	}
}
Tile(WeakWallMidShadeOutline00B)
{
	isCloud = true;
	cloudRotation = 0.0;
	absorbProjectile = false;
	kickable = false;
	material.blockExplosions = false;
	life = 50;
	colorPalette = BG;
    sizeable = H;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		collisionPoints = (-8, -4), (-4, -12), (-4, -4), (-8, 4);
	}
}
Tile(WeakWallMidShadeOutline00C)
{
	isCloud = true;
	cloudRotation = 0.0;
	absorbProjectile = false;
	kickable = false;
	material.blockExplosions = false;
	life = 50;
	colorPalette = BG;
    sizeable = H;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		collisionPoints = (-8, -4), (0, -12), (0, -4), (-8, 4);
	}
}
Tile(WeakWallMidShadeOutline00E)
{
	isCloud = true;
	cloudRotation = 0.0;
	absorbProjectile = false;
	kickable = false;
	material.blockExplosions = false;
	life = 50;
	colorPalette = BG;
    sizeable = H;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		collisionPoints = (-16,-4), (16,-12), (16,-4), (-16,4);
	}
}
Tile(WeakWallMidShadeOutline00F)
{
	life = 50;
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-4, -2), (4, 4), (-2, 4);
	}
}
Tile(WeakWallMidShadeOutline00G)
{
	life = 50;
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-8, -4), (4, 8), (-8, 8);
	}
}
Tile(WeakWallLightPixel00A)
{
	life = 50;
	colorPalette = BG;
	sizeable = D;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-0.5, -0.5), (0.5, -0.5), (0.5, 0.5), (-0.5, 0.5);
	}
}
Tile(WeakWallLightShade00A)
{
	life = 50;
	colorPalette = BG;
	sizeable = D;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
	}
}
Tile(WeakWallLightShade00B)
{
	life = 50;
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-4, -4), (4, -4), (-4, 4);
	}
}
Tile(WeakWallLightShade00C)
{
	life = 50;
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-8, -4), (8, -4), (-8, 4);
	}
}
Tile(WeakWallLightShade00E)
{
	life = 50;
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-16, -4), (16, -4), (-16, 4);
	}
}
Tile(WeakWallLightShade00F)
{
	life = 50;
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-4, -2), (4, 4), (-2, 4);
	}
}
Tile(WeakWallLightShade00G)
{
	life = 50;
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-8, -4), (4, 8), (-8, 8);
	}
}
Tile(WeakWallLightShade00I)
{
	life = 50;
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-8, -4), (8, -4), (-8, 4);
	}
}
Tile(WeakWallLightShadeOutline00A)
{
	isCloud = true;
	cloudRotation = 0.0;
	absorbProjectile = false;
	kickable = false;
	material.blockExplosions = false;
	life = 50;
	colorPalette = BG;
    sizeable = H;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		collisionPoints = (-4, 0), (4, 0), (4, 4), (-4, 4);
	}
}
Tile(WeakWallLightShadeOutline00B)
{
	isCloud = true;
	cloudRotation = 0.0;
	absorbProjectile = false;
	kickable = false;
	material.blockExplosions = false;
	life = 50;
	colorPalette = BG;
    sizeable = H;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		collisionPoints = (-8, -4), (-4, -12), (-4, -4), (-8, 4);
	}
}
Tile(WeakWallLightShadeOutline00C)
{
	isCloud = true;
	cloudRotation = 0.0;
	absorbProjectile = false;
	kickable = false;
	material.blockExplosions = false;
	life = 50;
	colorPalette = BG;
    sizeable = H;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		collisionPoints = (-8, -4), (0, -12), (0, -4), (-8, 4);
	}
}
Tile(WeakWallLightShadeOutline00E)
{
	isCloud = true;
	cloudRotation = 0.0;
	absorbProjectile = false;
	kickable = false;
	material.blockExplosions = false;
	life = 50;
	colorPalette = BG;
    sizeable = H;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		collisionPoints = (-16,-4), (16,-12), (16,-4), (-16,4);
	}
}
Tile(WeakWallLightShadeOutline00F)
{
	life = 50;
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-4, -2), (4, 4), (-2, 4);
	}
}
Tile(WeakWallLightShadeOutline00G)
{
	life = 50;
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-8, -4), (4, 8), (-8, 8);
	}
}
Tile(BurningWeakWallDarkPixel00A)
{
	life = 20;
	material.flammable = true;
	doTakeDamage.Fire = true;
	colorPalette = BG;
	sizeable = D;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-4, -4), (4, -4), (-4, 4);
	}
}
Tile(BurningWeakWallDarkShade00A)
{
	life = 20;
	material.flammable = true;
	doTakeDamage.Fire = true;
	colorPalette = BG;
	sizeable = D;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
	}
}
Tile(BurningWeakWallDarkShade00B)
{
	life = 20;
	material.flammable = true;
	doTakeDamage.Fire = true;
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-4, -4), (4, -4), (-4, 4);
	}
}
Tile(BurningWeakWallDarkShade00C)
{
	life = 20;
	material.flammable = true;
	doTakeDamage.Fire = true;
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-8, -4), (8, -4), (-8, 4);
	}
}
Tile(BurningWeakWallDarkShade00E)
{
	life = 20;
	material.flammable = true;
	doTakeDamage.Fire = true;
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-16, -4), (16, -4), (-16, 4);
	}
}
Tile(BurningWeakWallDarkShade00F)
{
	life = 20;
	material.flammable = true;
	doTakeDamage.Fire = true;
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-4, -2), (4, 4), (-2, 4);
	}
}
Tile(BurningWeakWallDarkShade00G)
{
	life = 20;
	material.flammable = true;
	doTakeDamage.Fire = true;
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-8, -4), (4, 8), (-8, 8);
	}
}
Tile(BurningWeakWallDarkShade00I)
{
	life = 20;
	material.flammable = true;
	doTakeDamage.Fire = true;
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-8, -4), (8, -4), (-8, 4);
	}
}
Tile(BurningWeakWallDarkShadeOutline00A)
{
	isCloud = true;
	cloudRotation = 0.0;
	absorbProjectile = false;
	kickable = false;
	material.blockExplosions = false;
	life = 20;
	material.flammable = true;
	doTakeDamage.Fire = true;
	colorPalette = BG;
    sizeable = H;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		collisionPoints = (-4, 0), (4, 0), (4, 4), (-4, 4);
	}
}
Tile(BurningWeakWallDarkShadeOutline00B)
{
	isCloud = true;
	cloudRotation = 0.0;
	absorbProjectile = false;
	kickable = false;
	material.blockExplosions = false;
	life = 20;
	material.flammable = true;
	doTakeDamage.Fire = true;
	colorPalette = BG;
    sizeable = H;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		collisionPoints = (-8, -4), (-4, -12), (-4, -4), (-8, 4);
	}
}
Tile(BurningWeakWallDarkShadeOutline00C)
{
	isCloud = true;
	cloudRotation = 0.0;
	absorbProjectile = false;
	kickable = false;
	material.blockExplosions = false;
	life = 20;
	material.flammable = true;
	doTakeDamage.Fire = true;
	colorPalette = BG;
    sizeable = H;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		collisionPoints = (-8, -4), (0, -12), (0, -4), (-8, 4);
	}
}
Tile(BurningWeakWallDarkShadeOutline00E)
{
	isCloud = true;
	cloudRotation = 0.0;
	absorbProjectile = false;
	kickable = false;
	material.blockExplosions = false;
	life = 20;
	material.flammable = true;
	doTakeDamage.Fire = true;
	colorPalette = BG;
    sizeable = H;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		collisionPoints = (-16,-4), (16,-12), (16,-4), (-16,4);
	}
}
Tile(BurningWeakWallDarkShadeOutline00F)
{
	life = 20;
	material.flammable = true;
	doTakeDamage.Fire = true;
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-4, -2), (4, 4), (-2, 4);
	}
}
Tile(BurningWeakWallDarkShadeOutline00G)
{
	life = 20;
	material.flammable = true;
	doTakeDamage.Fire = true;
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-8, -4), (4, 8), (-8, 8);
	}
}
Tile(BurningWeakWallMidPixel00A)
{
	life = 20;
	material.flammable = true;
	doTakeDamage.Fire = true;
	colorPalette = BG;
	sizeable = D;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-4, -4), (4, -4), (-4, 4);
	}
}
Tile(BurningWeakWallMidShade00A)
{
	life = 20;
	material.flammable = true;
	doTakeDamage.Fire = true;
	colorPalette = BG;
	sizeable = D;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
	}
}
Tile(BurningWeakWallMidShade00B)
{
	life = 20;
	material.flammable = true;
	doTakeDamage.Fire = true;
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-4, -4), (4, -4), (-4, 4);
	}
}
Tile(BurningWeakWallMidShade00C)
{
	life = 20;
	material.flammable = true;
	doTakeDamage.Fire = true;
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-8, -4), (8, -4), (-8, 4);
	}
}
Tile(BurningWeakWallMidShade00E)
{
	life = 20;
	material.flammable = true;
	doTakeDamage.Fire = true;
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-16, -4), (16, -4), (-16, 4);
	}
}
Tile(BurningWeakWallMidShade00F)
{
	life = 20;
	material.flammable = true;
	doTakeDamage.Fire = true;
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-4, -2), (4, 4), (-2, 4);
	}
}
Tile(BurningWeakWallMidShade00G)
{
	life = 20;
	material.flammable = true;
	doTakeDamage.Fire = true;
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-8, -4), (4, 8), (-8, 8);
	}
}
Tile(BurningWeakWallMidShade00I)
{
	life = 20;
	material.flammable = true;
	doTakeDamage.Fire = true;
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-8, -4), (8, -4), (-8, 4);
	}
}
Tile(BurningWeakWallMidShadeOutline00A)
{
	isCloud = true;
	cloudRotation = 0.0;
	absorbProjectile = false;
	kickable = false;
	material.blockExplosions = false;
	life = 20;
	material.flammable = true;
	doTakeDamage.Fire = true;
	colorPalette = BG;
    sizeable = H;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		collisionPoints = (-4, 0), (4, 0), (4, 4), (-4, 4);
	}
}
Tile(BurningWeakWallMidShadeOutline00B)
{
	isCloud = true;
	cloudRotation = 0.0;
	absorbProjectile = false;
	kickable = false;
	material.blockExplosions = false;
	life = 20;
	material.flammable = true;
	doTakeDamage.Fire = true;
	colorPalette = BG;
    sizeable = H;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		collisionPoints = (-8, -4), (-4, -12), (-4, -4), (-8, 4);
	}
}
Tile(BurningWeakWallMidShadeOutline00C)
{
	isCloud = true;
	cloudRotation = 0.0;
	absorbProjectile = false;
	kickable = false;
	material.blockExplosions = false;
	life = 20;
	material.flammable = true;
	doTakeDamage.Fire = true;
	colorPalette = BG;
    sizeable = H;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		collisionPoints = (-8, -4), (0, -12), (0, -4), (-8, 4);
	}
}
Tile(BurningWeakWallMidShadeOutline00E)
{
	isCloud = true;
	cloudRotation = 0.0;
	absorbProjectile = false;
	kickable = false;
	material.blockExplosions = false;
	life = 20;
	material.flammable = true;
	doTakeDamage.Fire = true;
	colorPalette = BG;
    sizeable = H;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		collisionPoints = (-16,-4), (16,-12), (16,-4), (-16,4);
	}
}
Tile(BurningWeakWallMidShadeOutline00F)
{
	life = 20;
	material.flammable = true;
	doTakeDamage.Fire = true;
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-4, -2), (4, 4), (-2, 4);
	}
}
Tile(BurningWeakWallMidShadeOutline00G)
{
	life = 20;
	material.flammable = true;
	doTakeDamage.Fire = true;
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-8, -4), (4, 8), (-8, 8);
	}
}
Tile(BurningWeakWallLightPixel00A)
{
	life = 20;
	material.flammable = true;
	doTakeDamage.Fire = true;
	colorPalette = BG;
	sizeable = D;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-0.5, -0.5), (0.5, -0.5), (0.5, 0.5), (-0.5, 0.5);
	}
}
Tile(BurningWeakWallLightShade00A)
{
	life = 20;
	material.flammable = true;
	doTakeDamage.Fire = true;
	colorPalette = BG;
	sizeable = D;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
	}
}
Tile(BurningWeakWallLightShade00B)
{
	life = 20;
	material.flammable = true;
	doTakeDamage.Fire = true;
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-4, -4), (4, -4), (-4, 4);
	}
}
Tile(BurningWeakWallLightShade00C)
{
	life = 20;
	material.flammable = true;
	doTakeDamage.Fire = true;
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-8, -4), (8, -4), (-8, 4);
	}
}
Tile(BurningWeakWallLightShade00E)
{
	life = 20;
	material.flammable = true;
	doTakeDamage.Fire = true;
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-16, -4), (16, -4), (-16, 4);
	}
}
Tile(BurningWeakWallLightShade00F)
{
	life = 20;
	material.flammable = true;
	doTakeDamage.Fire = true;
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-4, -2), (4, 4), (-2, 4);
	}
}
Tile(BurningWeakWallLightShade00G)
{
	life = 20;
	material.flammable = true;
	doTakeDamage.Fire = true;
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-8, -4), (4, 8), (-8, 8);
	}
}
Tile(BurningWeakWallLightShade00I)
{
	life = 20;
	material.flammable = true;
	doTakeDamage.Fire = true;
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-8, -4), (8, -4), (-8, 4);
	}
}
Tile(BurningWeakWallLightShadeOutline00A)
{
	isCloud = true;
	cloudRotation = 0.0;
	absorbProjectile = false;
	kickable = false;
	material.blockExplosions = false;
	life = 20;
	material.flammable = true;
	doTakeDamage.Fire = true;
	colorPalette = BG;
    sizeable = H;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		collisionPoints = (-4, 0), (4, 0), (4, 4), (-4, 4);
	}
}
Tile(BurningWeakWallLightShadeOutline00B)
{
	isCloud = true;
	cloudRotation = 0.0;
	absorbProjectile = false;
	kickable = false;
	material.blockExplosions = false;
	life = 20;
	material.flammable = true;
	doTakeDamage.Fire = true;
	colorPalette = BG;
    sizeable = H;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		collisionPoints = (-8, -4), (-4, -12), (-4, -4), (-8, 4);
	}
}
Tile(BurningWeakWallLightShadeOutline00C)
{
	isCloud = true;
	cloudRotation = 0.0;
	absorbProjectile = false;
	kickable = false;
	material.blockExplosions = false;
	life = 20;
	material.flammable = true;
	doTakeDamage.Fire = true;
	colorPalette = BG;
    sizeable = H;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		collisionPoints = (-8, -4), (0, -12), (0, -4), (-8, 4);
	}
}
Tile(BurningWeakWallLightShadeOutline00E)
{
	isCloud = true;
	cloudRotation = 0.0;
	absorbProjectile = false;
	kickable = false;
	material.blockExplosions = false;
	life = 20;
	material.flammable = true;
	doTakeDamage.Fire = true;
	colorPalette = BG;
    sizeable = H;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		collisionPoints = (-16,-4), (16,-12), (16,-4), (-16,4);
	}
}
Tile(BurningWeakWallLightShadeOutline00F)
{
	life = 20;
	material.flammable = true;
	doTakeDamage.Fire = true;
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-4, -2), (4, 4), (-2, 4);
	}
}
Tile(BurningWeakWallLightShadeOutline00G)
{
	life = 20;
	material.flammable = true;
	doTakeDamage.Fire = true;
	colorPalette = BG;
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-8, -4), (4, 8), (-8, 8);
	}
}
Tile(Acid00A)
{
	isCloud = true;
	cloudRotation = 0;
	drawCategory = FG;
	material = water;
	sizeable = H;
	fixture()
	{
		collisionGroup = none;
	}
	animation(Acid00A)
	{
		frameTimes = 100;
		width = 16;
		isSynced = true;
	}
}
Tile(Acid00B)
{
	drawCategory = FG;
	material = water;
	sizeable = D;
	fixture()
	{
		collisionGroup = none;
	}
}
Tile(DinerBooth)
{
	colorPalette = Concrete;
	material = cloth;
	fixture()
	{
		collisionPoints = (-16, -8), (16, -8), (16, 6), (-16, 6);
	}
}
Tile(Duct00A)
{
	drawCategory = FG;
	sizeable = H;
	projectileHit = false;
	fixture()
	{
		collisionGroup = none;
	}
}
Tile(Duct00B)
{
	drawCategory = FG;
	sizeable = H;
	projectileHit = false;
	fixture()
	{
		collisionGroup = none;
	}
}
Tile(Duct00C)
{
	drawCategory = OBJ;
	sizeable = N;
	life = 5;
	doTakeDamage.Fire = true;
	material.resistance.impact.modifier = 0;
	material.destroyEffect = none;
	material.destroySound = none;
}
Tile(Glass00A)
{
	sizeable = D;
	material = glass;
	colorPalette = metal;
}
Tile(Glass00B)
{
	sizeable = D;
	material = glass;
	colorPalette = metal;
}
Tile(Glass00C)
{
	sizeable = D;
	material = glass;
	colorPalette = metal;
}
Tile(Glass00D)
{
	sizeable = D;
	material = glass;
	colorPalette = metal;
}
Tile(InvisibleBlock)
{
	tileTexture = Invisible8x8;
	sizeable = D;
}
Tile(InvisibleBlockReallySmall)
{
	tileTexture = Invisible4x4;
	sizeable = D;
	fixture()
	{
		collisionPoints = (-2, -2), (2, -2), (2, 2), (-2, 2);
	}
}
Tile(InvisibleBlockObjectsOnly)
{
	tileTexture = Invisible8x8;
	projectileHit = false;
	material.blockExplosions = false;
	material.transparent = true;
	sizeable = D;
	fixture()
	{
		collisionPoints = (-4, -2), (4, -2), (4, 4), (-4, 4);
		blockFire = false;
	}
}
Tile(InvisibleProjectileBlocker)
{
	tileTexture = Invisible;
	listTexture = InvisibleProjectileBlocker2X;
	sizeable = D;
	material.blockExplosions = false;
	material.flammable = false;
	punchable = false;
	kickable = false;
	projectileHit = true;
	fixture()
	{
		collisionGroup = none;
		blockFire = false;
	}
}
Tile(InvisibleFireBlocker)
{
	tileTexture = Invisible;
	listTexture = InvisibleFireBlocker2X;
	sizeable = D;
	material.blockExplosions = false;
	material.flammable = false;
	punchable = false;
	kickable = false;
	projectileHit = false;
	material.transparent = true;
	fixture()
	{
		collisionGroup = none;
		blockFire = true;
	}
}
Tile(InvisibleExplosionBlocker)
{
	tileTexture = Invisible4x4;
	sizeable = D;
	material.blockExplosions = true;
	material.flammable = false;
	punchable = false;
	kickable = false;
	projectileHit = false;
	material.transparent = true;
	fixture()
	{
		collisionGroup = none;
		blockFire = false;
	}
}
Tile(LineOfSightBlocker)
{
	sizeable = D;
	absorbProjectile = false;
	punchable = false;
	kickable = false;
	material.hit.projectile.sound = none;
	material.hit.projectile.effect = none;
	material.blockExplosions = false;
	material.transparent = false;
	fixture()
	{
		collisiongroup = none;
		blockFire = false;
	}
}
Tile(PlaceholderTile1)
{
	sizeable = D;
}
Tile(PlaceholderTileRamp1)
{
	sizeable = N;
	fixture()
	{
		collisionPoints = (-4, -4), (4, -4), (4, 4);
	}
}
Tile(PlaceholderTileRamp2)
{
	sizeable = N;
	fixture()
	{
		collisionPoints = (-8, -4), (8, -4), (8, 4);
	}
}
Tile(PlaceholderPlatform1)
{
	isCloud = true;
	cloudRotation = 0.0;
	absorbProjectile = false;
	kickable = false;
	material.blockExplosions = false;
	sizeable = H;
	fixture()
	{
		collisionPoints = (-4, 0), (4, 0), (4, 4), (-4, 4);
	}
}
Tile(PlaceholderPlatformRamp1)
{
	isCloud = true;
	cloudRotation = 0.0;
	absorbProjectile = false;
	kickable = false;
	material.blockExplosions = false;
	sizeable = N;
	fixture()
	{
		collisionPoints = (-4, 0), (-4, -4), (4, 4), (4, 8);
	}
}
Tile(PlaceholderPlatformRamp2)
{
	isCloud = true;
	cloudRotation = 0.0;
	absorbProjectile = false;
	kickable = false;
	material.blockExplosions = false;
	sizeable = N;
	fixture()
	{
		collisionPoints = (-8, 0), (-8, -4), (8, 4), (8, 8);
	}
}
Tile(InvisibleBlockSmall)
{
	tileTexture = Invisible8x8;
	sizeable = N;
	fixture()
	{
		collisionPoints = (-3.625, -3.625), (3.625, -3.625), (3.625, 3.625), (-3.625, 3.625);
	}
}
Tile(InvisibleBlockNoCollision)
{
	tileTexture = Invisible8x8;
	sizeable = D;
	material.blockExplosions = false;
	material.flammable = false;
	punchable = false;
	kickable = false;
	projectileHit = false;
	fixture()
	{
		collisionGroup = none;
		blockFire = false;
	}
}
Tile(InvisibleLadder)
{
	sizeable = V;
	isLadder = true;
	freeRotation = false;
	colorPalette = palNone;
	absorbProjectile = false;
	kickable = false;
	projectileHit = false;
	fixture()
	{
		collisionGroup = none;
		blockFire = false;
		collisionPoints = (-8, -4), (8, -4), (8, 4), (-8, 4);
	}
}
Tile(InvisiblePlatform)
{
	tileTexture = Invisible8x8;
	isCloud = true;
	cloudRotation = 0.0;
	absorbProjectile = false;
	punchable = false;
	kickable = false;
	material.hit.projectile.sound = none;
	material.hit.projectile.effect = none;
	material.blockExplosions = false;
	sizeable = H;
}
Tile(PoolTable00)
{
	fixture()
	{
		material = wood;
		collisionPoints = (16, -8), (16, 4), (-16, 4), (-16, -8);
	}
}
Tile(Portal)
{
	material.blockExplosions = false;
	sizeable = N;
	projectileHit = false;
	fixture()
	{
		collisionGroup = none;
		collisionPoints = (-8, -16), (8, -16), (8, 16), (-8, 16);
	}
	helpEntry = Portals;
}
Tile(PortalD)
{
	material.blockExplosions = false;
	sizeable = N;
	projectileHit = false;
	fixture()
	{
		collisionGroup = none;
		collisionPoints = (-8, -16), (8, -16), (8, 16), (-8, 16);
	}
	helpEntry = Portals;
}
Tile(PortalU)
{
	material.blockExplosions = false;
	sizeable = N;
	projectileHit = false;
	fixture()
	{
		collisionGroup = none;
		collisionPoints = (-8, -16), (8, -16), (8, 16), (-8, 16);
	}
	helpEntry = Portals;
}
Tile(PortalWoodU)
{
	drawCategory = SLD;
	material.blockExplosions = false;
	sizeable = N;
	projectileHit = false;
	fixture()
	{
		collisionGroup = none;
		collisionPoints = (-8, -16), (8, -16), (8, 16), (-8, 16);
	}
	helpEntry = Portals;
}
Tile(PortalWoodD)
{
	drawCategory = SLD;
	material.blockExplosions = false;
	sizeable = N;
	projectileHit = false;
	fixture()
	{
		collisionGroup = none;
		collisionPoints = (-8, -16), (8, -16), (8, 16), (-8, 16);
	}
	helpEntry = Portals;
}
Tile(Rug00A)
{
	life = 5;
	material = cloth;
	material.flammable = true;
	doTakeDamage.Fire = true;
	colorPalette = Cloth;
	kickable = false;
	punchable = false;
	material.resistance.impact.threshold = 15;
	sizeable = N;
	fixture()
	{
		collisionPoints = (-4.25, 4.1), (-4.25, 0), (4.25, 0), (4.25, 4.1);
	}
}
Tile(Rug00A_D)
{
	material = cloth;
	colorPalette = Cloth;
	sizeable = N;
	fixture()
	{
		collisionPoints = (-4, 4.1), (-4, 0), (4, 0), (4, 4.1);
	}
}
Tile(Sandbags00A)
{
	sizeable = D;
	material.stepSound = none;
}
Tile(Sandbags00B)
{
	sizeable = D;
	material.stepSound = none;
}
Tile(Sandbags00C)
{
	sizeable = D;
	material.stepSound = none;
}
Tile(Sandbags00D)
{
	sizeable = D;
	material.stepSound = none;
}
Tile(Sandbags00E)
{
	sizeable = D;
	material.stepSound = none;
}
Tile(Sandbags00F)
{
	sizeable = D;
	material.stepSound = none;
}
Tile(Sandbags00G)
{
	sizeable = D;
	material.stepSound = none;
}
Tile(Sandbags00H)
{
	sizeable = D;
	material.stepSound = none;
}
Tile(Sandbags01A)
{
	sizeable = D;
	material.stepSound = none;
}
Tile(Sandbags01B)
{
	sizeable = D;
	material.stepSound = none;
}
Tile(Sandbags01C)
{
	sizeable = D;
	material.stepSound = none;
}
Tile(Sandbags01D)
{
	sizeable = D;
	material.stepSound = none;
}
Tile(Shadow00A)
{
	sizeable = D;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
	}
}
Tile(Shadow00B)
{
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-4, -4), (4, -4), (-4, 4);
	}
}
Tile(Shadow00C)
{
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-8, -4), (8, -4), (-8, 4);
	}
}
Tile(Shadow00D)
{
	sizeable = D;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
	}
}
Tile(Shadow00E)
{
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-16, -4), (16, -4), (-16, 4);
	}
}
Tile(Shadow02A)
{
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-4, -2), (4, 4), (-2, 4);
	}
}
Tile(Shadow02B)
{
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-8, -4), (4, 8), (-8, 8);
	}
}
Tile(Shadow03A)
{
	sizeable = D;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
	}
}
Tile(Shadow03B)
{
	sizeable = n;
	material.destroyEffect = none;
	material.destroySound = none;
	fixture()
	{
		mass = 0.5 kg;
		collisionPoints = (-8, -4), (8, -4), (-8, 4);
	}
}
Tile(TankTread00A)
{
	colorPalette = Metal;
	material = metal;
	sizeable = H;
}
Tile(TankTread00B)
{
	colorPalette = Metal;
	material = metal;
	fixture()
	{
		collisionPoints = (0, -12), (8, -12), (8, 12), (-8, 12), (-8, 0);
	}
}
Tile(TankTread00C)
{
	colorPalette = Metal;
	material = metal;
}
Tile(TrainPart00A)
{
	colorPalette = Metal;
	material = metal;
	colorPalette = metal;
}
Tile(TrainPart01A)
{
	colorPalette = Metal;
	material = metal;
	colorPalette = metal;
}
Tile(SteamSpawner)
{
	colorPalette = Metal;
	material.destroyEffect = none;
	material.destroySound = none;
	material.blockExplosions = false;
	projectileHit = false;
	tileTexture = Invisible8x8;
	fixture()
	{
		collisionGroup = none;
		blockFire = false;
	}
}
Tile(BgSteamSpawner)
{
	material.blockExplosions = false;
	drawCategory = BG;
	projectileHit = false;
	tileTexture = Invisible8x8;
	fixture()
	{
		collisionGroup = none;
		blockFire = false;
	}
}
Tile(Water00A)
{
	isCloud = true;
	cloudRotation = 0;
	drawCategory = FG;
	material = water;
	sizeable = H;
	projectileHit = false;
	fixture()
	{
		collisionGroup = none;
		blockFire = false;
	}
	animation(Water00A)
	{
		frameTimes = 100;
		width = 16;
		isSynced = true;
	}
}
Tile(Water00B)
{
	drawCategory = FG;
	material = water;
	sizeable = D;
	projectileHit = false;
	fixture()
	{
		collisionGroup = none;
		blockFire = false;
	}
	animation(Water00B)
	{
		frameTimes = 100;
		width = 16;
		isSynced = true;
	}
}

defaultTile(d_t)
{
	material = dirt;
	colorPalette = Ground;
	sizeable = A;
}

Tile(Ground00A) {}
Tile(Ground00B) {}
Tile(Ground00C){
	sizeable = n;
	fixture()
	{
		collisionPoints = (-4, -4), (4, -4), (4, 4);
	}
}
Tile(Ground00D) {}
Tile(Ground00E){
	sizeable = n;
	fixture()
	{
		collisionPoints = (-8, -4), (8, -4), (8, 4);
	}
}
Tile(Ground00F) {}
Tile(Ground00G){
	sizeable = n;
	fixture()
	{
		collisionPoints = (-16, -4), (16, -4), (16, 4);
	}
}
Tile(Ground00H) {}
Tile(Ground00I) {}
Tile(Ground00J) {}
Tile(Ground01A) {}
Tile(Ground02A) {}
Tile(Ground03A) {}
Tile(Ground04A) {}

Tile(Snow01A) {}
Tile(Snow01B) {}
Tile(Snow01C)
{
	sizeable = n;
	fixture()
	{
		collisionPoints = (-4, -4), (4, -4), (4, 4);
	}
}
Tile(Snow01D) {}
Tile(Snow01E)
{
	sizeable = n;
	fixture()
	{
		collisionPoints = (-8, -4), (8, -4), (8, 4);
	}
}
Tile(Snow01F) {}
Tile(Snow01G)
{
	sizeable = n;
	fixture()
	{
		collisionPoints = (-16, -4), (16, -4), (16, 4);
	}
}
Tile(Snow01H) {}
Tile(Snow02A) {}

defaultTile(d_t)
{
	material = concrete;
	colorPalette = BambooBlock;
	sizeable = A;
}

Tile(DurableBamboo00B) {}
Tile(DurableBamboo00A) {}

defaultTile(d_t)
{
	material = concrete;
	colorPalette = Stone;
	sizeable = A;
}

Tile(Slab00A) {}
Tile(Cobblestone00A) {}

defaultTile(d_t)
{
	material = concrete;
	colorPalette = Concrete;
	sizeable = A;
}

Tile(Adobe00A) {}
Tile(Adobe00B) {}
Tile(Adobe00C) {}
Tile(Adobe00D) {}
Tile(Adobe00E) {}
Tile(Adobe00F) {}
Tile(Adobe00G) {}
Tile(Adobe00H) {}
Tile(Adobe00I) {}
Tile(Adobe00J) {}
Tile(Adobe00K) {}
Tile(Adobe00L) {}
Tile(AdobeArch00A)
{
	fixture()
	{
		collisionPoints = (-8, -4), (4, 8), (-8, 8);
	}
}
Tile(AdobeArch00B)
{
	fixture()
	{
		collisionPoints = (8, -4), (8, 8), (-4, 8);
	}
}

defaultTile(d_t)
{
	material = concrete;
	colorPalette = Concrete;
	sizeable = A;
}

Tile(Asphalt00A) {}
Tile(Asphalt00B) {}
Tile(Asphalt00C)
{
	fixture()
	{
		collisionPoints = (-4, -4), (4, -4), (4, 4);
	}
}
Tile(Asphalt00D) {}
Tile(Asphalt00E)
{
	fixture()
	{
		collisionPoints = (-8, -4), (8, -4), (8, 4);
	}
}
Tile(Asphalt00F) {}
Tile(Asphalt00G)
{
	fixture()
	{
		collisionPoints = (-16, -4), (16, -4), (16, 4);
	}
}
Tile(Asphalt00H) {}
Tile(Asphalt00I) {}
Tile(Asphalt00J) {}

defaultTile(d_t)
{
	material = stone;
	colorPalette = Stone;
	sizeable = A;
}

Tile(Bricks00A) {}
Tile(Bricks00B) {}

defaultTile(d_t)
{
	material = concrete;
	colorPalette = Concrete;
	sizeable = A;
	instaGibPlayer = true;
}

Tile(Concrete00A) {}
Tile(Concrete00B) {}
Tile(Concrete00C) {}
Tile(Concrete00D)
{
	sizeable = N;
	fixture()
	{
		collisionPoints = (-8, 0), (-8, -8), (8, 0), (8, 8);
	}
}
Tile(Concrete00E)
{
	sizeable = N;
	fixture()
	{
		collisionPoints = (-8, 8), (-8, 0), (8, -8), (8, 0);
	}
}
Tile(Concrete00F)
{
	sizeable = N;
	fixture()
	{
		collisionPoints = (-8, 0), (-8, -8), (8, 0), (8, 8);
	}
}
Tile(Concrete00G)
{
	sizeable = N;
	fixture()
	{
		collisionPoints = (-8, 8), (-8, 0), (8, -8), (8, 0);
	}
}
Tile(Concrete00H) {}
Tile(Concrete00I) {}
Tile(Concrete00J) {}
Tile(Concrete00K) {}
Tile(Concrete00L) {}
Tile(Concrete00M) {}
Tile(Concrete00N)
{
	sizeable = N;
	fixture()
	{
		collisionPoints = (-4, -8), (4, 0), (4, 8), (-4, 0);
	}
}
Tile(Concrete01A) {}
Tile(Concrete01B) {}
Tile(Concrete01C) {}
Tile(Concrete01D) {}
Tile(Concrete01E) {}
Tile(Concrete01F)
{
	sizeable = N;
	fixture()
	{
		collisionPoints = (-8, -12), (8, -4), (8, 12), (-8, 4);
	}
}
Tile(Concrete01G)
{
	sizeable = N;
	fixture()
	{
		collisionPoints = (-4, -12), (4, -4), (4, 12), (-4, 4);
	}
}
Tile(Concrete02A) {}
Tile(Concrete02B) {}
Tile(Concrete02C) {}
Tile(Concrete02D) {}
Tile(Concrete02E) {}
Tile(Concrete02F) {}
Tile(Concrete02G) {}
Tile(Concrete02H)
{
	fixture()
	{
		collisionPoints = (-8, -4), (8, -4), (8, 4);
	}
}
Tile(Concrete02I)
{
	fixture()
	{
		collisionPoints = (-8, -4), (8, -4), (-8, 4);
	}
}
Tile(Concrete02J)
{
	fixture()
	{
		collisionPoints = (-8, -8), (8, -8), (8, 8);
	}
}
Tile(Concrete02K)
{
	fixture()
	{
		collisionPoints = (-8, -8), (8, -8), (-8, 8);
	}
}
Tile(Concrete03A) {}
Tile(Concrete03B) {}
Tile(Concrete03C) {}
Tile(Concrete07A) {}
Tile(Concrete07B) {}
Tile(Concrete07C) {}

defaultTile(d_t)
{
	instaGibPlayer = false;
}

Tile(ConcreteBlockade00A)
{
	sizeable = N;
	fixture()
	{
		collisionPoints = (-16, -4), (16, -4), (4, 4), (-4, 4);
	}
}
Tile(ConcreteBlockade00B)
{
	sizeable = N;
	fixture()
	{
		collisionPoints = (-4, -8), (4, -8), (4, 8), (-4, 8);
	}
}
Tile(ConcreteBlockade00C)
{
	sizeable = N;
	fixture()
	{
		collisionPoints = (-4, -8), (4, -8), (4, 8), (-4, 8);
	}
}

defaultTile(d_t)
{
	material = dirt;
	colorPalette = Dirt;
	sizeable = D;
}

Tile(Dirt00A) {}
Tile(Dirt00B) {}
Tile(Dirt00C) {}
Tile(Dirt00D) {}
Tile(Dirt00E) {}
Tile(Dirt00F) {}
Tile(Dirt00G) {}
Tile(Dirt01A) {}
Tile(Dirt01B) {}
Tile(Dirt01C) {}
Tile(Dirt01D) {}
Tile(Dirt01E) {}
Tile(Dirt01F) {}
Tile(Dirt02A) {}
Tile(Dirt02B) {}
Tile(Dirt02C)
{
	sizeable = n;
	fixture()
	{
		collisionPoints = (-4, -4), (4, -4), (4, 4);
	}
}
Tile(Dirt02D) {}
Tile(Dirt02E)
{
	sizeable = n;
	fixture()
	{
		collisionPoints = (-8, -4), (8, -4), (8, 4);
	}
}
Tile(Dirt02F) {}
Tile(Dirt02G)
{
	sizeable = n;
	fixture()
	{
		collisionPoints = (-16, -4), (16, -4), (16, 4);
	}
}
Tile(Dirt02H) {}
Tile(Dirt02I) {}
Tile(Dirt02J) {}

defaultTile(d_t)
{
	material = glass;
	colorPalette = Metal;
	sizeable = A;
}

Tile(BulletproofGlass00A) {}
Tile(BulletproofGlass00B)
{
	sizeable = n;
	fixture()
	{
		collisionPoints = (-4, -4), (4, -4), (4, 4);
	}
}
Tile(BulletproofGlass00C)
{
	sizeable = n;
	fixture()
	{
		collisionPoints = (-8, -8), (8, 0), (8, 8), (-8, 0);
	}
}
Tile(BulletproofGlass00D) {}
Tile(BulletproofGlass00Weak)
{
	sizeable = n;
	life = 200;
	material.resistance.fire.modifier = 1;
	material.resistance.fire.threshold = 0;
	material.resistance.explosion.modifier = 1;
	material.resistance.explosion.threshold = 0;
	material.resistance.projectile.modifier = 1;
	material.resistance.projectile.threshold = 0;
	material.resistance.impact.modifier = 1;
	material.resistance.impact.threshold = 0;
}
Tile(GlassSheet00A)
{
	adpnc = true;
	life = 5;
	gibpressure.enableoneway = true;
	gibpressure.total = 80 kg;
	gibpressure.spike = 400 kg;
	absorbProjectile = false;
	material.blockExplosions = false;
	sizeable = N;
	drawCategory = OBJ;
	doTakeDamage.fire = true;
	material.resistance.fire.modifier = 1;
	breakOnDive = true;
	breakOnStagger = true;
	fixture()
	{
		collisionPoints = (-4, -2), (4, -2), (4, 4), (-4, 4);
		blockFire = true;
	}
}
Tile(GlassSheet00B)
{
	adpnc = true;
	life = 5;
	gibpressure.enableoneway = true;
	gibpressure.total = 80 kg;
	gibpressure.spike = 400 kg;
	absorbProjectile = false;
	material.blockExplosions = false;
	sizeable = N;
	drawCategory = OBJ;
	doTakeDamage.fire = true;
	material.resistance.fire.modifier = 1;
	breakOnDive = true;
	breakOnStagger = true;
	fixture()
	{
		collisionPoints = (-8, 0), (-8, -4), (8, 4), (8, 8);
		blockFire = true;
	}
}
Tile(GlassSheet00C)
{
	adpnc = true;
	life = 5;
	gibpressure.enableoneway = true;
	gibpressure.total = 80 kg;
	gibpressure.spike = 400 kg;
	absorbProjectile = false;
	material.blockExplosions = false;
	sizeable = N;
	drawCategory = OBJ;
	doTakeDamage.fire = true;
	material.resistance.fire.modifier = 1;
	breakOnDive = true;
	breakOnStagger = true;
	fixture()
	{
		collisionPoints = (-8, 8), (-8, 4), (8, -4), (8, 0);
		blockFire = true;
	}
}
Tile(GlassSheet00D)
{
	adpnc = true;
	life = 5;
	gibpressure.enableoneway = true;
	gibpressure.total = 80 kg;
	gibpressure.spike = 400 kg;
	absorbProjectile = false;
	material.blockExplosions = false;
	sizeable = N;
	drawCategory = OBJ;
	doTakeDamage.fire = true;
	material.resistance.fire.modifier = 1;
	breakOnDive = true;
	breakOnStagger = true;
	fixture()
	{
		collisionPoints = (-3, -4), (3, -4), (3, 4), (-3, 4);
		blockFire = true;
	}
}
Tile(GlassSheet00E)
{
	adpnc = true;
	life = 5;
	gibpressure.enableoneway = true;
	gibpressure.total = 80 kg;
	gibpressure.spike = 400 kg;
	absorbProjectile = false;
	material.blockExplosions = false;
	sizeable = N;
	drawCategory = OBJ;
	doTakeDamage.fire = true;
	material.resistance.fire.modifier = 1;
	breakOnDive = true;
	breakOnStagger = true;
	fixture()
	{
		collisionPoints = (-4, 0), (-4, -4), (4, 4), (4, 8);
		blockFire = true;
	}
}
Tile(GlassSheet00F)
{
	adpnc = true;
	life = 5;
	gibpressure.enableoneway = true;
	gibpressure.total = 80 kg;
	gibpressure.spike = 400 kg;
	absorbProjectile = false;
	material.blockExplosions = false;
	sizeable = N;
	drawCategory = OBJ;
	doTakeDamage.fire = true;
	material.resistance.fire.modifier = 1;
	breakOnDive = true;
	breakOnStagger = true;
	fixture()
	{
		collisionPoints = (-4, -4), (4, -4), (4, 4);
		blockFire = true;
	}
}
Tile(ReinforcedGlass00A)
{
	life = 50;
	objectStrength = 50;
	drawCategory = OBJ;
	breakOnDive = true;
	breakOnStagger = true;
	material.resistance.fire.modifier = 1;
	material.resistance.fire.threshold = 0;
	material.resistance.explosion.modifier = 1;
	material.resistance.explosion.threshold = 0;
	material.resistance.projectile.modifier = 1;
	material.resistance.projectile.threshold = 0;
	material.resistance.impact.modifier = 1;
	material.resistance.impact.threshold = 0;
	animation(ReinforcedGlass00A)
	{
		width = 8;
		frameTimes = 0;
	}
}

defaultTile(d_t)
{
	material = metal;
	material.resistance.fire.modifier = 0;
	colorPalette = Metal;
	sizeable = A;
	instaGibPlayer = true;
}

Tile(DuctWall00A) {}
Tile(DuctWall00B) {}
Tile(DuctWall00C) {}
Tile(DuctWall00D) {}
Tile(DuctWall00E) {}
Tile(Metal00A) {}
Tile(Metal00B) {}
Tile(Metal00C) {}
Tile(Metal00D) {}
Tile(Metal00E)
{
	sizeable = N;
	fixture()
	{
		collisionPoints = (-8, -8), (8, 0), (8, 8), (-8, 0);
	}
}
Tile(Metal00F)
{
	sizeable = N;
	fixture()
	{
		collisionPoints = (-8, 0), (8, -8), (8, 0), (-8, 8);
	}
}
Tile(Metal00H) {}
Tile(Metal00I) {}
Tile(Metal00J) {}
Tile(Metal01A) {}
Tile(Metal01B) {}
Tile(Metal01C) {}
Tile(Metal02A) {}
Tile(Metal02B) {}
Tile(Metal02C) {}
Tile(Metal02D) {}
Tile(Metal02E) {}
Tile(Metal02F)
{
	sizeable = N;
	fixture()
	{
		collisionPoints = (-8, -12), (8, -4), (8, 12), (-8, 4);
	}
}
Tile(Metal02G)
{
	sizeable = N;
	fixture()
	{
		collisionPoints = (-8, -4), (8, -12), (8, 4), (-8, 12);
	}
}
Tile(Metal03A) {}
Tile(Metal03B) {}
Tile(Metal03C)
{
	sizeable = N;
	fixture()
	{
		collisionPoints = (-8, 0), (-8, -8), (8, 0), (8, 8);
	}
}
Tile(Metal03D)
{
	sizeable = N;
	fixture()
	{
		collisionPoints = (-8, 8), (-8, 0), (8, -8), (8, 0);
	}
}
Tile(Metal04A) {}
Tile(Metal04B) {}
Tile(Metal04C) {}
Tile(Metal04D) {}
Tile(Metal04E) {}
Tile(Metal04F) {}
Tile(Metal04G) {}
Tile(Metal04H) {}
Tile(Metal04I) {}
Tile(Metal04J)
{
	sizeable = N;
	fixture()
	{
		collisionPoints = (-6, -6), (6, -6, (6, 6), (-6, 6);
	}
}
Tile(Metal05A) {}
Tile(Metal05B) {}
Tile(Metal05C) {}
Tile(Metal05D) {}
Tile(Metal05E) {}
Tile(Metal05F) {}
Tile(Metal05G) {}
Tile(Metal05H) {}
Tile(Metal05I) {}
Tile(Metal05J)
{
	sizeable = N;
	fixture()
	{
		collisionPoints = (-12, -12), (12, -12, (12, 12), (-12, 12);
	}
}
Tile(Metal05K) {}
Tile(Metal06A) {}
Tile(Metal06B) {}
Tile(Metal06C) {}
Tile(Metal06D) {}
Tile(Metal06E) {}
Tile(Metal06F) {}
Tile(Metal07A) {}
Tile(Metal07B) {}
Tile(Metal07C) {}
Tile(Metal07D) {}
Tile(Metal07E) {}
Tile(Metal07F) {}
Tile(Metal07G) {}
Tile(Metal07H) {}
Tile(Metal07I) {}
Tile(Metal07J) {}
Tile(Metal07K) {}
Tile(Metal07L) {}
Tile(Metal07M)
{
	sizeable = N;
	fixture()
	{
		collisionPoints = (-8, -8), (8, -8), (8, 8), (-8, 0);
	}
}
Tile(Metal07N)
{
	sizeable = N;
	fixture()
	{
		collisionPoints = (-8, -8), (8, -8), (8, 8), (-8, 0);
	}
}
Tile(Metal07O)
{
	sizeable = N;
	fixture()
	{
		collisionPoints = (-8, -8), (8, -8), (8, 8), (-8, 0);
	}
}
Tile(Metal07P)
{
	sizeable = N;
	fixture()
	{
		collisionPoints = (-8, -8), (8, -8), (8, 0), (-8, 8);
	}
}
Tile(Metal07Q)
{
	sizeable = N;
	fixture()
	{
		collisionPoints = (-8, -8), (8, -8), (8, 0), (-8, 8);
	}
}
Tile(Metal07R)
{
	sizeable = N;
	fixture()
	{
		collisionPoints = (-8, -8), (8, -8), (8, 0), (-8, 8);
	}
}
Tile(Metal07S)
{
	sizeable = N;
	fixture()
	{
		collisionPoints = (-8, 0), (8, -8), (8, 8), (-8, 8);
	}
}
Tile(Metal07T)
{
	sizeable = N;
	fixture()
	{
		collisionPoints = (-8, 0), (8, -8), (8, 8), (-8, 8);
	}
}
Tile(Metal07U)
{
	sizeable = N;
	fixture()
	{
		collisionPoints = (-8, 0), (8, -8), (8, 8), (-8, 8);
	}
}
Tile(Metal07V)
{
	sizeable = N;
	fixture()
	{
		collisionPoints = (-8, -8), (8, 0), (8, 8), (-8, 8);
	}
}
Tile(Metal07W)
{
	sizeable = N;
	fixture()
	{
		collisionPoints = (-8, -8), (8, 0), (8, 8), (-8, 8);
	}
}
Tile(Metal07X)
{
	sizeable = N;
	fixture()
	{
		collisionPoints = (-8, -8), (8, 0), (8, 8), (-8, 8);
	}
}
Tile(Metal08A) {}
Tile(Metal08B) {}
Tile(Metal08C) {}
Tile(Metal08D) {}
Tile(Metal08E) {}
Tile(Metal08F) {}
Tile(Metal09A) {}
Tile(Metal09B) {}
Tile(Metal09C) {}
Tile(Metal09D) {}
Tile(Metal09E)
{
	fixture()
	{
		collisionPoints = (-8, -8), (8, -8), (8, 8), (0, 8);
	}
}
Tile(Metal09F)
{
	fixture()
	{
		collisionPoints = (0, -8), (8, -8), (8, 8), (-8, 8);
	}
}
Tile(Metal10A) {}
Tile(Metal10B)
{
	fixture()
	{
		collisionPoints = (-8, -8), (8, -8), (8, 8);
	}
}
Tile(Metal10C)
{
	fixture()
	{
		collisionPoints = (-8, -8), (8, -8), (-8, 8);
	}
}
Tile(Metal10D) {}
Tile(Metal11A) {}
Tile(Metal11B) {}
Tile(Metal12A) {}
Tile(Metal12B) {}
Tile(Metal12C)
{
	sizeable = N;
	fixture()
	{
		collisionPoints = (-4, -8), (4, -8), (4, 8), (-4, 0);
	}
}
Tile(Metal12D)
{
	sizeable = N;
	fixture()
	{
		collisionPoints = (-8, -8), (8, -8), (8, 8), (-8, 0);
	}
}
Tile(Metal13A) {}
Tile(Metal13B) {}
Tile(Metal13C) {}
Tile(Metal13D) {}
Tile(Metal13E) {}
Tile(Metal13F) {}
Tile(MetalBars00A)
{
	projectileHit = false;
	material.blockExplosions = false;
	material.transparent = true;
	fixture()
	{
		blockFire = false;
	}
}
Tile(MetalBars00B)
{
	projectileHit = false;
	material.blockExplosions = false;
	material.transparent = true;
	fixture()
	{
		blockFire = false;
	}
}
Tile(MetalBars00C)
{
	projectileHit = false;
	material.blockExplosions = false;
	material.transparent = true;
	fixture()
	{
		blockFire = false;
	}
}
Tile(MetalCounter00)
{
	sizeable = N;
	drawCategory = OBJ;
}

defaultTile(d_t)
{
	instaGibPlayer = false;
}

Tile(MetalLadder00A)
{
	isLadder = true;
	sizeable = V;
	freeRotation = false;
	material.blockExplosions = false;
	projectileHit = false;
	fixture()
	{
		collisionGroup = none;
		collisionPoints = (-6, -4), (6, -4), (6, 4), (-6, 4);
		blockFire = false;
	}
}
Tile(MetalLadder00B)
{
	isLadder = true;
	sizeable = V;
	freeRotation = false;
	material.blockExplosions = false;
	projectileHit = false;
	fixture()
	{
		collisionGroup = none;
		collisionPoints = (-6, -4), (6, -4), (6, 4), (-6, 4);
		blockFire = false;
	}
}
Tile(MetalLadder00C)
{
	isLadder = true;
	sizeable = V;
	freeRotation = false;
	material.blockExplosions = false;
	projectileHit = false;
	fixture()
	{
		collisionGroup = none;
		collisionPoints = (-6, -4), (6, -4), (6, 4), (-6, 4);
		blockFire = false;
	}
}
Tile(MetalLadder01A)
{
	isLadder = true;
	sizeable = V;
	freeRotation = false;
	material.blockExplosions = false;
	projectileHit = false;
	fixture()
	{
		collisionGroup = none;
		collisionPoints = (-6, -4), (6, -4), (6, 4), (-6, 4);
		blockFire = false;
	}
}
Tile(MetalPlat00A)
{
	isCloud = true;
	cloudRotation = 0.0;
	absorbProjectile = false;
	material.blockExplosions = false;
	sizeable = H;
}
Tile(MetalPlat00B)
{
	isCloud = true;
	cloudRotation = 0.0;
	absorbProjectile = false;
	material.blockExplosions = false;
	sizeable = H;
}
Tile(MetalPlat00C)
{
	isCloud = true;
	cloudRotation = 0.0;
	absorbProjectile = false;
	material.blockExplosions = false;
	sizeable = H;
}
Tile(MetalPlat00D)
{
	isCloud = true;
	cloudRotation = 0.785398163;
	absorbProjectile = false;
	material.blockExplosions = false;
	sizeable = N;
	fixture()
	{
		collisionPoints = (-8, 0), (-8, -8), (8, 0), (8, 8);
	}
}
Tile(MetalPlat00E)
{
	isCloud = true;
	cloudRotation = -0.485398163;
	absorbProjectile = false;
	material.blockExplosions = false;
	sizeable = N;
	fixture()
	{
		collisionPoints = (-8, 8), (-8, 0), (8, -8), (8, 0);
	}
}
Tile(MetalPlat00F)
{
	isCloud = true;
	cloudRotation = 0.785398163;
	absorbProjectile = false;
	material.blockExplosions = false;
	sizeable = N;
	fixture()
	{
		collisionPoints = (-8, 0), (-8, -8), (8, 0), (8, 8);
	}
}
Tile(MetalPlat00G)
{
	isCloud = true;
	cloudRotation = -0.785398163;
	absorbProjectile = false;
	material.blockExplosions = false;
	sizeable = N;
	fixture()
	{
		collisionPoints = (-8, 8), (-8, 0), (8, -8), (8, 0);
	}
}
Tile(MetalPlat00J)
{
	colorPalette = Metal;
	isCloud = true;
	cloudRotation = 0.785398163;
	absorbProjectile = false;
	material.blockExplosions = false;
	sizeable = N;
	fixture()
	{
		collisionPoints = (-4, 0), (-4, -4), (4, 4), (4, 8);
	}
}
Tile(MetalPlat00K)
{
	colorPalette = Metal;
	isCloud = true;
	cloudRotation = 0.785398163;
	absorbProjectile = false;
	material.blockExplosions = false;
	sizeable = N;
	fixture()
	{
		collisionPoints = (-4, 0), (-4, -4), (4, 4), (4, 8);
	}
}
Tile(MetalPlat01A)
{
	colorPalette = Metal;
	isCloud = true;
	cloudRotation = 0.0;
	absorbProjectile = false;
	material.blockExplosions = false;
	sizeable = H;
	fixture()
	{
		collisionPoints = (-4, 0), (4, 0), (4, 4), (-4, 4);
	}
}
Tile(MetalPlat01B)
{
	colorPalette = Metal;
	colorPalette = Metal;
	isCloud = true;
	cloudRotation = 0.0;
	absorbProjectile = false;
	material.blockExplosions = false;
	sizeable = H;
	fixture()
	{
		collisionPoints = (-4, 0), (4, 0), (4, 4), (-4, 4);
	}
}
Tile(MetalPlat01C)
{
	colorPalette = Metal;
	isCloud = true;
	cloudRotation = 0.0;
	absorbProjectile = false;
	material.blockExplosions = false;
	sizeable = H;
	fixture()
	{
		collisionPoints = (-4, 0), (4, 0), (4, 4), (-4, 4);
	}
}
Tile(MetalPlat01D)
{
	colorPalette = Metal;
	isCloud = true;
	cloudRotation = 0.0;
	absorbProjectile = false;
	material.blockExplosions = false;
	sizeable = H;
	fixture()
	{
		collisionPoints = (-4, 0), (4, 0), (4, 4), (-4, 4);
	}
}
Tile(MetalPlat01E)
{
	colorPalette = Metal;
	isCloud = true;
	cloudRotation = 0.785398163;
	absorbProjectile = false;
	material.blockExplosions = false;
	sizeable = N;
	fixture()
	{
		collisionPoints = (-8, 0), (-8, -4), (8, 4), (8, 8);
	}
}
Tile(MetalPlat01F)
{
	colorPalette = Metal;
	isCloud = true;
	cloudRotation = 0.785398163;
	absorbProjectile = false;
	material.blockExplosions = false;
	sizeable = N;
	fixture()
	{
		collisionPoints = (-4, 0), (-4, -4), (4, 4), (4, 8);
	}
}
Tile(MetalRail00A) {}
Tile(MetalRoof00A) {}
Tile(MetalRoof00B) {}
Tile(MetalRoof00C) {}
Tile(MetalRoof00D) {}
Tile(MetalRoof00E)
{
	fixture()
	{
		collisionPoints = (-8, -8), (8, -8), (8, 8), (-8, 0);
	}
}
Tile(MetalRoof00F)
{
	fixture()
	{
		collisionPoints = (-8, -8), (8, -8), (8, 0), (-8, 8);
	}
}

defaultTile(d_t)
{
	instaGibPlayer = true;
}

Tile(MetalTrain00A) {}
Tile(MetalTrain00B) {}
Tile(MetalTrain00C) {}
Tile(MetalTrain00D) {}
Tile(MetalTrain00E) {}
Tile(MetalTrain00F) {}
Tile(MetalTrain00G) {}
Tile(MetalTrain00H) {}
Tile(MetalTrain00I) {}
Tile(MetalTrain00J) {}
Tile(MetalTrain00K) {}
Tile(MetalTrain00L) {}
Tile(MetalTrain00M) {}
Tile(MetalTrain00N) {}
Tile(MetalTrain00O) {}
Tile(MetalTrain00P) {}

defaultTile(d_t)
{
	instaGibPlayer = false;
}

defaultTile(d_t)
{
	material = snow;
	sizeable = A;
}

Tile(Snow00A) {}
Tile(Snow00B) {}
Tile(Snow00C) {}
Tile(Snow00D) {}
Tile(Snow00E) {}
Tile(Snow00F) {}
Tile(Ice00A) {material = ice;}
Tile(Ice00B) {material = ice;}
Tile(Ice00C)
{
	sizeable = n;
	material = ice;
	fixture()
	{
		collisionPoints = (-4, -4), (4, -4), (4, 4);
	}
}
Tile(Ice00D) {material = ice;}
Tile(Ice00E)
{
	sizeable = n;
	material = ice;
	fixture()
	{
		collisionPoints = (-8, -4), (8, -4), (8, 4);
	}
}
Tile(Ice00F) {material = ice;}
Tile(Ice00G) {material = ice;}
Tile(Ice00H) {
	sizeable = n;
	material = ice;
	fixture()
	{
		collisionPoints = (-16, -4), (16, -4), (16, 4);
	}
}
Tile(Ice00I) {material = ice;}
Tile(Ice00J) {material = ice;}
Tile(Ice01A) {material = ice;}
Tile(Sand00A) {}
Tile(Sand00B) {}
Tile(Sand00C)
{
	fixture()
	{
		collisionPoints = (-4, -4), (4, -4), (4, 4);
	}
}
Tile(Sand00D) {}
Tile(Sand00E)
{
	fixture()
	{
		collisionPoints = (-8, -4), (8, -4), (8, 4);
	}
}
Tile(Sand00F) {}
Tile(Sand00G)
{
	fixture()
	{
		collisionPoints = (-16, -4), (16, -4), (16, 4);
	}
}
Tile(Sand00H) {}
Tile(Sand00I) {}
Tile(Sand00J) {}

defaultTile(d_t)
{
	material = stone;
	colorPalette = Stone;
	sizeable = A;
	instaGibPlayer = true;
}

Tile(Stone00A) {}
Tile(Stone00B) {}
Tile(Stone00C) {}
Tile(Stone01A) {}
Tile(Stone02A) {}
Tile(Stone02B) {}
Tile(Stone02C) {}
Tile(Stone02D) {}
Tile(Stone03A) {}
Tile(Stone03B) {}
Tile(Stone03C) {}
Tile(Stone04A) {}
Tile(Stone04B) {}
Tile(Stone04C) {}
Tile(Stone05A) {}
Tile(Stone05B) {}
Tile(Stone05C) {}
Tile(Stone05D) {}
Tile(Stone06A) {}
Tile(Stone07A) {}
Tile(Stone07B) {}
Tile(Stone08A) {}
Tile(Stone08B) {}
Tile(Stone08C) {}
Tile(Stone08D) {}
Tile(Stone08E) {}
Tile(Stone08F) {}
Tile(Stone08G) {}
Tile(Stone08H) {}

defaultTile(d_t)
{
	instaGibPlayer = false;
}

Tile(Stone08WindowA)
{
	material = glass;
}
Tile(Stone08WindowB)
{
	material = glass;
}
Tile(Stone09A) {}
Tile(Stone09B) {}
Tile(Stone09C)
{
	fixture()
	{
		collisionPoints = (-4, -8), (4, 0), (4, 8), (-4, 0);
	}
}
Tile(Stone09D)
{
	fixture()
	{
		collisionPoints = (-8, -8), (8, 0), (8, 8), (-8, 0);
	}
}
Tile(Stone09E)
{
	fixture()
	{
		collisionPoints = (-4, -8), (4, 0), (4, 8), (-4, 0);
	}
}
Tile(Stone09F)
{
	fixture()
	{
		collisionPoints = (-8, -8), (8, 0), (8, 8), (-8, 0);
	}
}
Tile(Stone09G) {}
Tile(StonePlat00A)
{
	isCloud = true;
	cloudRotation = 0.0;
	absorbProjectile = false;
	material.blockExplosions = false;
	sizeable = H;
}
Tile(StonePlat00B)
{
	isCloud = true;
	cloudRotation = 0.0;
	absorbProjectile = false;
	material.blockExplosions = false;
	sizeable = H;
}
Tile(StonePlat00C)
{
	isCloud = true;
	cloudRotation = 0.0;
	absorbProjectile = false;
	material.blockExplosions = false;
	sizeable = H;
}

defaultTile(d_t)
{
	material = ceramic;
	colorPalette = Tile;
	sizeable = D;
}

Tile(RoofTile00A) {}
Tile(RoofTile00B) {}
Tile(RoofTile00C) {}
Tile(RoofTile00D)
{
	sizeable = N;
	fixture()
	{
		collisionPoints = (-8, 0), (-8, -8), (8, -8), (8, 8);
	}
}
Tile(RoofTile00E)
{
	sizeable = N;
	fixture()
	{
		collisionPoints = (-8, 8), (-8, -8), (8, -8), (8, 0);
	}
}
Tile(RoofTile00F)
{
	sizeable = N;
	fixture()
	{
		collisionPoints = (-8, -12), (8, -12), (8, 12), (-8, -4);
	}
}
Tile(RoofTile00G)
{
	sizeable = N;
	fixture()
	{
		collisionPoints = (-8, -12), (8, -12), (8, -4), (-8, 12);
	}
}
Tile(RoofTile00H)
{
	sizeable = N;
	fixture()
	{
		collisionPoints = (-8, -12), (8, -12), (8, 12), (-8, -4);
	}
	fixture(a)
	{
		collisionGroup = static_ground;
		collisionPoints = (0, 4), (8, 4), (8, 12), (0, 12);
	}
}
Tile(RoofTile00I)
{
	sizeable = N;
	fixture()
	{
		collisionPoints = (-8, -12), (8, -12), (8, -4), (-8, 12);
	}
	fixture(a)
	{
		collisionGroup = static_ground;
		collisionPoints = (-8, 4), (0, 4), (0, 12), (-8, 12);
	}
}
Tile(RoofTile00J) {}
Tile(RoofTile00K) {}
Tile(RoofTile00L) {}
Tile(RoofTile00M) {}
Tile(RoofTile00N) {}
Tile(RoofTile00O) {}

defaultTile(d_t)
{
	material = wood;
	colorPalette = Wood;
	sizeable = D;
}

Tile(Wood00A) {}
Tile(Wood00B) {}
Tile(Wood00C) {}
Tile(Wood00D) {}
Tile(Wood00E)
{
	sizeable = N;
	fixture()
	{
		collisionPoints = (-8, 0), (-8, -8), (8, 0), (8, 8);
	}
}
Tile(Wood00F)
{
	sizeable = N;
	fixture()
	{
		collisionPoints = (-8, 8), (-8, 0), (8, -8), (8, 0);
	}
}
Tile(Wood01A) {}
Tile(Wood01B) {}
Tile(Wood01C) {}
Tile(Wood02A) {}
Tile(Wood02B) {}
Tile(Wood02C) {}
Tile(Wood02D)
{
	sizeable = N;
	fixture()
	{
		collisionPoints = (-8, -8), (8, -8), (8, 8), (-8, 0);
	}
}
Tile(Wood02E)
{
	sizeable = N;
	fixture()
	{
		collisionPoints = (-8, -8), (8, -8), (8, 0), (-8, 8);
	}
}
Tile(Wood02F)
{
	sizeable = N;
	fixture()
	{
		collisionPoints = (-8, -4), (8, -4), (8, 4);
	}
}
Tile(Wood02G)
{
	sizeable = N;
	fixture()
	{
		collisionPoints = (-8, -4), (8, -4), (-8, 4);
	}
}
Tile(Wood02H)
{
	sizeable = N;
	fixture()
	{
		collisionPoints = (-8, -8), (8, -8), (8, 8);
	}
}
Tile(Wood02I)
{
	sizeable = N;
	fixture()
	{
		collisionPoints = (-8, -8), (8, -8), (-8, 8);
	}
}
Tile(Wood03A) {}
Tile(Wood03B) {}
Tile(Wood03C) {}
Tile(Wood03D) {}
Tile(Wood03E) {}
Tile(Wood03F) {}
Tile(Wood04A) {}
Tile(Wood04B) {}
Tile(Wood04C) {}
Tile(Wood04D)
{
	sizeable = N;
	fixture()
	{
		collisionPoints = (-8, -8), (8, -8), (8, 8), (-8, 0);
	}
}
Tile(Wood04E)
{
	sizeable = N;
	fixture()
	{
		collisionPoints = (-4, -8), (4, -8), (4, 8), (-4, 0);
	}
}
Tile(Wood05A) {}
Tile(Wood06A) {}
Tile(Wood06B) {}
Tile(Wood06C) {}
Tile(Wood06D) {}
Tile(Wood06E) {}
Tile(Wood06Weak)
{
	life = 50;
}
Tile(Wood00Weak)
{
	life = 50;
	material.flammable = true;
	doTakeDamage.Fire = true;
}
Tile(Wood01AWeak)
{
	life = 50;
	material.flammable = true;
	doTakeDamage.Fire = true;
}
Tile(Wood03Weak)
{
	life = 50;
	material.flammable = true;
	doTakeDamage.Fire = true;
}
Tile(WoodCounter00)
{
	punchable = true;
	kickable = true;
	sizeable = N;
	drawCategory = OBJ;
	fixture()
	{
		collisionGroup = static_ground;
	}
}
Tile(WoodLadder00A)
{
	isLadder = true;
	sizeable = V;
	freeRotation = false;
	projectileHit = false;
	material.blockExplosions = false;
	fixture()
	{
		blockFire = false;
		collisionGroup = none;
		collisionPoints = (-6, -4), (6, -4), (6, 4), (-6, 4);
	}
}
Tile(WoodPlat01A)
{
	isCloud = true;
	cloudRotation = 0.0;
	absorbProjectile = false;
	material.blockExplosions = false;
	sizeable = H;
	fixture()
	{
		collisionPoints = (-4, 0), (4, 0), (4, 4), (-4, 4);
	}
}
Tile(WoodPlat01B)
{
	isCloud = true;
	cloudRotation = 0.0;
	absorbProjectile = false;
	material.blockExplosions = false;
	sizeable = H;
	fixture()
	{
		collisionPoints = (-4, 0), (4, 0), (4, 4), (-4, 4);
	}
}
Tile(WoodPlat01C)
{
	isCloud = true;
	cloudRotation = 0.0;
	absorbProjectile = false;
	material.blockExplosions = false;
	sizeable = H;
	fixture()
	{
		collisionPoints = (-4, 0), (4, 0), (4, 4), (-4, 4);
	}
}
Tile(WoodPlat01D)
{
	isCloud = true;
	cloudRotation = 0.785398163;
	absorbProjectile = false;
	material.blockExplosions = false;
	sizeable = N;
	fixture()
	{
		collisionPoints = (-4, 0), (-4, -4), (4, 4), (4, 8);
	}
}
Tile(WoodPlat01E)
{
	isCloud = true;
	cloudRotation = 0.785398163;
	absorbProjectile = false;
	material.blockExplosions = false;
	sizeable = N;
	fixture()
	{
		collisionPoints = (-8, 0), (-8, -4), (8, 4), (8, 8);
	}
}

Tile(MarbleStatueBase00)
{
	drawCategory = SLD;
	material = Stone;
	type = Static;
	projectileHit = false;
	material.blockExplosions = false;
	clientSync.ECODBPI = true;
	fixture()
	{
		collisionGroup = none;
		blockFire = false;
	}
}


defaultTile(default_tile)
{
	material = wood;
	life = 80;
	gibpressure.total = 400 kg;
	gibpressure.spike = 1600 kg;
	material.blockExplosions = true;
	material.flammable = true;
	doTakeDamage.fire = true;
}

Tile(PirateShip00A){ }
Tile(PirateShip00B){ }
Tile(PirateShip00C){ }
Tile(PirateShip00D){ }
Tile(PirateShip00E){ }
Tile(PirateShip00F){ }
Tile(PirateShip01A){ fixture(){ collisionPoints = (-4, -4), (4, -4), (4, 4);} }
Tile(PirateShip01B){ fixture(){ collisionPoints = (-4, -4), (4, 4), (-4, 4);} }
Tile(PirateShip01C){ fixture(){ collisionPoints = (-4, -8), (4, -8), (4, 8);} }
Tile(PirateShip01D){ fixture(){ collisionPoints = (-4, -8), (4, 8), (-4, 8);} }
Tile(PirateShip01E){ fixture(){ collisionPoints = (-4, -12), (4, -12), (4, 12);} }
Tile(PirateShip01F){ fixture(){ collisionPoints = (-4, -12), (4, 12), (-4, 12);} }
Tile(PirateShip01G){ fixture(){ collisionPoints = (-12, 4), (12, 4), (12, -4);} }
Tile(PirateShip02A){ fixture(){ collisionPoints = (-8, 8), (0, -8), (8, -8), (0, 8);} }
Tile(PirateShip02B){ }
Tile(PirateShip02C){ fixture(){ collisionPoints = (4, -8), (4, 8), (-4, 8);} }
Tile(PirateShip02D){ fixture(){ collisionPoints = (4, -12), (4, 12), (-4, 12);} }
Tile(PirateShip03A){ fixture(){ collisionPoints = (-4, -4), (4, -4), (4, 4);} }
Tile(PirateShip03B){ fixture(){ collisionPoints = (-4, -4), (4, -4), (-4, 4);} }
Tile(PirateShip03C){ fixture(){ collisionPoints = (-4, -4), (4, -4), (4, 4);} }
Tile(PirateShip03D){ fixture(){ collisionPoints = (-4, -4), (4, -4), (-4, 4);} }
Tile(PirateShip03E){ }
Tile(PirateShip03F){ }
Tile(PirateShip03G){ }
Tile(PirateShip03H){ }
Tile(PirateShip03I){ }
Tile(PirateShip03J){ }
Tile(PirateShip03K){ }
Tile(PirateShip03L){ }
Tile(PirateShip03M){ }
Tile(PirateShip03N){ }
Tile(PirateShip03O){ }
Tile(PirateShip03P){ }
Tile(PirateShip03Q){ }
Tile(PirateShip03R){ }
Tile(PirateShip03S){ }
Tile(PirateShip04A){ material = metal; projectileHit=false; material.blockExplosions=false; material.transparent=true; fixture(){ blockFire=false; } }
Tile(PirateShip05A){ }
Tile(PirateShip05B){ }
Tile(PirateShip06A){ material = metal; isCloud=true; cloudRotation=0.0; absorbProjectile=false; material.blockExplosions=false;}
Tile(PirateShip07A){ fixture(){ collisionPoints = (-20, 12.5), (-12, 6), (20, -12.5), (20, 12.5);} }
Tile(PirateShip07B){ }
Tile(PirateShip07C){ fixture(){ collisionPoints = (-8, -12.5), (-4, -12.5), (8, 12.5), (-8, 12.5);} }

Tile(PirateSteeringwheel00)
{
	type = Static;
	drawCategory = SLD;
	projectileHit = false;
	colorPalette = BG;
	punchable = false;
	kickable = false;
	animation(PirateSteeringwheel00)
	{
		width = 16;
		frameTimes = 0;
	}
	fixture()
	{
		collisionGroup = none;
	}
}
Tile(PirateArmory00)
{
	type = Static;
	drawCategory = SLD;
	projectileHit = false;
	colorPalette = BG;
	punchable = false;
	kickable = false;
	animation(PirateArmory00)
	{
		width = 24;
		frameTimes = 0;
	}
	fixture()
	{
		collisionGroup = none;
	}
}
Tile(CannonBallCrate00)
{
	type = Static;
	drawCategory = SLD;
	projectileHit = false;
	colorPalette = BG;
	punchable = false;
	kickable = false;
	animation(CannonBallCrate00)
	{
		width = 16;
		frameTimes = 0;
	}
	fixture()
	{
		collisionGroup = none;
	}
}

defaultTile(default_tile)
{
	material = wood;
	life = 0;
	gibpressure.total = 400 kg;
	gibpressure.spike = 1600 kg;
	material.blockExplosions = true;
	material.flammable = false;
	doTakeDamage.fire = false;
	kickable = false;
	punchable = false;
}

Tile(PirateLadder00A){ isLadder=true; sizeable=V; freeRotation=false; material.blockExplosions=false;  projectileHit=false; fixture(){ collisionGroup=none; collisionPoints=(-6,-4),(6,-4),(6,4),(-6,4); blockFire=false; } }
Tile(PirateLadder00B){ isLadder=true; sizeable=V; freeRotation=false; material.blockExplosions=false;  projectileHit=false; fixture(){ collisionGroup=none; collisionPoints=(-6,-4),(6,-4),(6,4),(-6,4); blockFire=false; } }
Tile(PirateLadder00C){ isLadder=true; sizeable=V; freeRotation=false; material.blockExplosions=false;  projectileHit=false; fixture(){ collisionGroup=none; collisionPoints=(-6,-4),(6,-4),(6,4),(-6,4); blockFire=false; } }

defaultTile(d_t)
{
	drawCategory = FG;
	fixture()
	{
		collisionGroup = static_ground;
	}
}

defaultTile(d_t)
{
	drawCategory = FG;
	projectileHit = false;
	material.blockExplosions = false;
	fixture()
	{
		blockFire = false;
		collisionGroup = none;
		collisionPoints = null;
	}
}

Tile(FgStone00A)
{
	colorPalette = Stone;
}
Tile(FgShadow00A)
{
	tileTexture = Shadow00A;
	sizeable = D;
	fixture()
	{
		mass = 0.5 kg;
	}
}
Tile(FgShadow00B)
{
	tileTexture = Shadow00B;
	sizeable = D;
	fixture()
	{
		mass = 0.5 kg;
	}
}
Tile(FgShadow00C)
{
	tileTexture = Shadow00C;
	sizeable = D;
	fixture()
	{
		mass = 0.5 kg;
	}
}
Tile(FgShadow00D)
{
	tileTexture = Shadow00D;
	sizeable = D;
	fixture()
	{
		mass = 0.5 kg;
	}
}
Tile(FgShadow00E)
{
	tileTexture = Shadow00E;
	sizeable = D;
	fixture()
	{
		mass = 0.5 kg;
	}
}
Tile(FgShadow02A)
{
	tileTexture = Shadow02A;
	sizeable = D;
	fixture()
	{
		mass = 0.5 kg;
	}
}
Tile(FgShadow02B)
{
	tileTexture = Shadow02B;
	sizeable = D;
	fixture()
	{
		mass = 0.5 kg;
	}
}
Tile(FgShadow03A)
{
	tileTexture = Shadow03A;
	sizeable = D;
	fixture()
	{
		mass = 0.5 kg;
	}
}
Tile(FgShadow03B)
{
	tileTexture = Shadow03B;
	sizeable = D;
	fixture()
	{
		mass = 0.5 kg;
	}
}
Tile(FgTube00A) {}
Tile(FgTube00B) {}
Tile(FgTube00C) {}
Tile(FgDamage00A) {colorPalette = BG;}
Tile(FgDamage00B) {colorPalette = BG;}
Tile(FgDamage00C) {colorPalette = BG;}
Tile(FgDamage00D) {colorPalette = BG;}
Tile(FgDamage01A) {colorPalette = BG;}
Tile(FgDamage01B) {colorPalette = BG;}
Tile(FgDamage01C) {colorPalette = BG;}
Tile(FgDamage01D) {colorPalette = BG;}
Tile(FgGradientBlue00A){ }
Tile(FgGradientBlue01A){ }
Tile(FgGradientBlue02A){ }
Tile(FgGradientCrimson00A){ }
Tile(FgGradientCrimson01A){ }
Tile(FgGradientCrimson02A){ }
Tile(FgGradientGreen00A){ }
Tile(FgGradientGreen01A){ }
Tile(FgGradientGreen02A){ }
Tile(FgGradientNavy00A){ }
Tile(FgGradientNavy01A){ }
Tile(FgGradientNavy02A){ }
Tile(FgGradientPink00A){ }
Tile(FgGradientPink01A){ }
Tile(FgGradientPink02A){ }
Tile(FgGradientPurple00A){ }
Tile(FgGradientPurple01A){ }
Tile(FgGradientPurple02A){ }
Tile(FgGradientShadow00A){ }
Tile(FgGradientShadow01A){ }
Tile(FgGradientShadow02A){ }
Tile(FgGradientWhite00A){ }
Tile(FgGradientWhite01A){ }
Tile(FgGradientWhite02A){ }
Tile(FgGradientYellow00A){ }
Tile(FgGradientYellow01A){ }
Tile(FgGradientYellow02A){ }
Tile(FgLightRadiusBlue00A){ }
Tile(FgLightRadiusBlue01A){ }
Tile(FgLightRadiusBlue02A){ }
Tile(FgLightRadiusBlue03A){ }
Tile(FgLightRadiusCrimson00A){ }
Tile(FgLightRadiusCrimson01A){ }
Tile(FgLightRadiusCrimson02A){ }
Tile(FgLightRadiusCrimson03A){ }
Tile(FgLightRadiusGreen00A){ }
Tile(FgLightRadiusGreen01A){ }
Tile(FgLightRadiusGreen02A){ }
Tile(FgLightRadiusGreen03A){ }
Tile(FgLightRadiusNavy00A){ }
Tile(FgLightRadiusNavy01A){ }
Tile(FgLightRadiusNavy02A){ }
Tile(FgLightRadiusNavy03A){ }
Tile(FgLightRadiusPink00A){ }
Tile(FgLightRadiusPink01A){ }
Tile(FgLightRadiusPink02A){ }
Tile(FgLightRadiusPink03A){ }
Tile(FgLightRadiusPurple00A){ }
Tile(FgLightRadiusPurple01A){ }
Tile(FgLightRadiusPurple02A){ }
Tile(FgLightRadiusPurple03A){ }
Tile(FgLightRadiusShadow00A){ }
Tile(FgLightRadiusShadow01A){ }
Tile(FgLightRadiusShadow02A){ }
Tile(FgLightRadiusShadow03A){ }
Tile(FgLightRadiusWhite00A){ }
Tile(FgLightRadiusWhite01A){ }
Tile(FgLightRadiusWhite02A){ }
Tile(FgLightRadiusWhite03A){ }
Tile(FgLightRadiusYellow00A){ }
Tile(FgLightRadiusYellow01A){ }
Tile(FgLightRadiusYellow02A){ }
Tile(FgLightRadiusYellow03A){ }

defaultTile(d_t)
{
	drawCategory = FG;
	colorPalette = FG;
	projectileHit = false;
	material.blockExplosions = false;
	fixture()
	{
		blockFire = false;
		collisionGroup = none;
		collisionPoints = null;
	}
}

Tile(FgWallDarkBigRound00A){ }
Tile(FgWallDarkOutline00A){ }
Tile(FgWallDarkPixel00A){ }
Tile(FgWallDarkRound00A){ }
Tile(FgWallDarkShade00A){ }
Tile(FgWallDarkShade00B){ }
Tile(FgWallDarkShade00C){ }
Tile(FgWallDarkShade00D){ }
Tile(FgWallDarkShade00E){ }
Tile(FgWallDarkShade00F){ }
Tile(FgWallDarkShade00G){ }
Tile(FgWallDarkShade00H){ }
Tile(FgWallDarkShade00I){ }
Tile(FgWallDarkShadeOutline00A){ }
Tile(FgWallDarkShadeOutline00B){ }
Tile(FgWallDarkShadeOutline00C){ }
Tile(FgWallDarkShadeOutline00E){ }
Tile(FgWallDarkShadeOutline00F){ }
Tile(FgWallDarkShadeOutline00G){ }
Tile(FgWallLightBigRound00A){ }
Tile(FgWallLightOutline00A){ }
Tile(FgWallLightPixel00A){ }
Tile(FgWallLightRound00A){ }
Tile(FgWallLightShade00A){ }
Tile(FgWallLightShade00B){ }
Tile(FgWallLightShade00C){ }
Tile(FgWallLightShade00D){ }
Tile(FgWallLightShade00E){ }
Tile(FgWallLightShade00F){ }
Tile(FgWallLightShade00G){ }
Tile(FgWallLightShade00H){ }
Tile(FgWallLightShade00I){ }
Tile(FgWallLightShadeOutline00A){ }
Tile(FgWallLightShadeOutline00B){ }
Tile(FgWallLightShadeOutline00C){ }
Tile(FgWallLightShadeOutline00E){ }
Tile(FgWallLightShadeOutline00F){ }
Tile(FgWallLightShadeOutline00G){ }
Tile(FgWallMidBigRound00A){ }
Tile(FgWallMidOutline00A){ }
Tile(FgWallMidPixel00A){ }
Tile(FgWallMidRound00A){ }
Tile(FgWallMidShade00A){ }
Tile(FgWallMidShade00B){ }
Tile(FgWallMidShade00C){ }
Tile(FgWallMidShade00D){ }
Tile(FgWallMidShade00E){ }
Tile(FgWallMidShade00F){ }
Tile(FgWallMidShade00G){ }
Tile(FgWallMidShade00H){ }
Tile(FgWallMidShade00I){ }
Tile(FgWallMidShadeOutline00A){ }
Tile(FgWallMidShadeOutline00B){ }
Tile(FgWallMidShadeOutline00C){ }
Tile(FgWallMidShadeOutline00E){ }
Tile(FgWallMidShadeOutline00F){ }
Tile(FgWallMidShadeOutline00G){ }